    (1:0) var t         <--     (1:0) var t
          ^                           ^

    (1:4) var t = x     <--     (1:4) var t = f
              ^                           ^

    (1:5) ar t = x      <--     (1:5) ar t = fu
              ^                           ^

    (1:8) t = x =>      <--     (1:8) t = funct
              ^                           ^

    (1:4) var t = x     <--    (1:17) ion t(x) 
              ^                           ^

    (1:5) ar t = x      <--    (1:18) on t(x) {
              ^                           ^

    (1:8) t = x =>      <--    (1:19) n t(x) {
              ^                           ^

    (1:9)  = x => x     <--    (1:20)  t(x) {
              ^                           ^

    (1:9)  = x => x     <--     (2:2)   retur
              ^                         ^

   (1:13)  => x * x     <--     (2:9) urn x * x
              ^                           ^

   (1:14) => x * x;     <--    (2:10) rn x * x;
              ^                           ^

   (1:17) x * x;        <--    (2:13) x * x;
              ^                           ^

   (1:18)  * x;         <--    (2:14)  * x;
              ^                           ^

   (1:18)  * x;         <--     (3:0) };
              ^                       ^
