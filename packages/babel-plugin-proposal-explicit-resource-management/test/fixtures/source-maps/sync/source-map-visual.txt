  (2:2-8)   using x =             <--    (3:2-8)   const x = 
            ^^^^^^                                 ^^^^^^

  (2:8-9) ing x = f               <--    (3:8-9) nst x = b
              ^                                      ^

 (2:9-12) ng x = fn()             <--   (3:9-12) st x = babe
              ^^^                                    ^^^

 (2:9-12) ng x = fn()             <--  (3:12-24) x = babelHelpers.usi
              ^^^                                    ^^^^^^^^^^^^

 (2:9-12) ng x = fn()             <--  (3:24-25) pers.usin
              ^^^                                    ^

 (2:9-12) ng x = fn()             <--  (3:25-30) ers.using(_st
              ^^^                                    ^^^^^

 (2:9-12) ng x = fn()             <--  (3:30-31) sing(_sta
              ^^^                                    ^

 (2:9-12) ng x = fn()             <--  (3:31-37) ing(_stack, fn
              ^^^                                    ^^^^^^

 (2:9-12) ng x = fn()             <--  (3:37-39) tack, fn()
              ^^^                                    ^^

(2:12-14) x = fn();               <--  (3:39-41) ck, fn());
              ^^                                     ^^

(2:14-15) = fn();                 <--  (3:41-42) , fn());
              ^                                      ^

(2:15-16)  fn();                  <--  (3:42-43)  fn());
              ^                                      ^

(2:16-17) fn();                   <--  (3:43-45) fn());
              ^                                      ^^

 (3:2-17)   doSomethingWith(x);   <--   (4:2-17)   doSomethingWith(x);
            ^^^^^^^^^^^^^^^                        ^^^^^^^^^^^^^^^

(3:17-18) With(x);                <--  (4:17-18) With(x);
              ^                                      ^

(3:18-19) ith(x);                 <--  (4:18-19) ith(x);
              ^                                      ^

(3:19-20) th(x);                  <--  (4:19-20) th(x);
              ^                                      ^

(3:20-21) h(x);                   <--  (4:20-21) h(x);
              ^                                      ^

(3:21-21) (x);                    <--    (5:0-9) } catch (_) {
             ><                                  ^^^^^^^^^

(3:21-21) (x);                    <--   (5:9-10) ch (_) {
             ><                                      ^

(3:21-21) (x);                    <--  (5:10-13) h (_) {
             ><                                      ^^^

(3:21-21) (x);                    <--    (6:2-6)   var _err
             ><                                    ^^^^

(3:21-21) (x);                    <--   (6:6-12) var _error = _
             ><                                      ^^^^^^

(3:21-21) (x);                    <--  (6:12-15) rror = _;
             ><                                      ^^^

(3:21-21) (x);                    <--  (6:15-16) r = _;
             ><                                      ^

(3:21-21) (x);                    <--  (6:16-17)  = _;
             ><                                      ^

(3:21-21) (x);                    <--    (7:2-6)   var _has
             ><                                    ^^^^

(3:21-21) (x);                    <--   (7:6-15) var _hasError = t
             ><                                      ^^^^^^^^^

(3:21-21) (x);                    <--  (7:15-23) rror = true;
             ><                                      ^^^^^^^^

(3:21-21) (x);                    <--   (8:0-11) } finally {
             ><                                  ^^^^^^^^^^^

(3:21-21) (x);                    <--   (9:2-14)   babelHelpers.dis
             ><                                    ^^^^^^^^^^^^

(3:21-21) (x);                    <--  (9:14-15) pers.disp
             ><                                      ^

(3:21-21) (x);                    <--  (9:15-22) ers.dispose(_st
             ><                                      ^^^^^^^

(3:21-21) (x);                    <--  (9:22-23) pose(_sta
             ><                                      ^

(3:21-21) (x);                    <--  (9:23-29) ose(_stack, _e
             ><                                      ^^^^^^

(3:21-21) (x);                    <--  (9:29-31) tack, _err
             ><                                      ^^

(3:21-21) (x);                    <--  (9:31-37) ck, _error, _h
             ><                                      ^^^^^^

(3:21-21) (x);                    <--  (9:37-39) rror, _has
             ><                                      ^^

(3:21-21) (x);                    <--  (9:39-48) or, _hasError);
             ><                                      ^^^^^^^^^

(3:21-21) (x);                    <--  (9:48-50) rror);
             ><                                      ^^

(3:21-21) (x);                    <--   (10:0-1) }
             ><                                  ^
