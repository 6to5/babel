name: CI

on: [push, pull_request]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prepare-yarn-cache:
    name: Prepare Cache
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js latest
        uses: actions/setup-node@v4
        with:
          node-version: "22.5"
          check-latest: true
          cache: "yarn"
      - name: 'Check or update Yarn cache (fix w/ "yarn install")'
        env:
          YARN_ENABLE_HARDENED_MODE: true # enable hardened mode as CI may run on untrusted repos
          YARN_ENABLE_SCRIPTS: false # disable post-install scripts
          YARN_NODE_LINKER: pnp # use pnp linker for better linking performance: it's meant to update yarn cache only
        run: |
          yarn install --mode=skip-build

  build:
    name: Build Babel Artifacts
    needs: prepare-yarn-cache
    runs-on: ubuntu-latest
    # Yarn PnP does not support native ESM yet (https://github.com/yarnpkg/berry/issues/638)
    # env:
    #    YARN_NODE_LINKER: pnp # use pnp linker for better linking performance and stricter checks
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js latest
        uses: actions/setup-node@v4
        with:
          node-version: "22.5"
          check-latest: true
          cache: "yarn"
      - name: Build babel artifacts
        run: |
          make -j build-standalone-ci
        env:
          BABEL_ENV: test-legacy
          BABEL_8_BREAKING: false
          STRIP_BABEL_8_FLAG: true
      - name: Build Makefile.js
        run: |
          node ./scripts/pack-script.js
      - name: Generate readmes
        run: |
          make generate-readme
      - name: Ensure cwd does not contain uncommitted changes
        run: |
          node ./scripts/assert-dir-git-clean.js build
      - name: Prepare artifacts
        run: |
          ./scripts/get-artifact-files.sh | tar --null -cvf babel-artifact.tar --files-from=-
      - uses: actions/upload-artifact@v3
        with:
          name: babel-artifact
          path: babel-artifact.tar
          retention-days: 5

  lint:
    name: Lint
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js latest
        uses: actions/setup-node@v4
        with:
          node-version: "22.5"
          check-latest: true
          cache: "yarn"
      - name: Install
        run: yarn install
      - uses: actions/download-artifact@v3
        with:
          name: babel-artifact
      - name: Extract artifacts
        run: tar -xf babel-artifact.tar; rm babel-artifact.tar
      - name: Lint
        run: make -j lint-ci check-compat-data
      - name: Ensure cwd does not contain uncommitted changes
        run: |
          node ./scripts/assert-dir-git-clean.js "lint-ci check-compat-data"
